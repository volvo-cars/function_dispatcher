<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classdispatcher_1_1internal_1_1CallExpecter" kind="class" language="C++" prot="public">
    <compoundname>dispatcher::internal::CallExpecter</compoundname>
    <basecompoundref prot="public" virt="non-virtual">dispatcher::internal::ExpecterBase</basecompoundref>
    <innerclass refid="structdispatcher_1_1internal_1_1CallExpecter_1_1ArgsFromTuple" prot="private">dispatcher::internal::CallExpecter::ArgsFromTuple</innerclass>
    <innerclass refid="structdispatcher_1_1internal_1_1CallExpecter_1_1ArgsFromTuple_3_01std_1_1tuple_3_01Args_8_8_8_01_4_01_4" prot="private">dispatcher::internal::CallExpecter::ArgsFromTuple&lt; std::tuple&lt; Args... &gt; &gt;</innerclass>
    <templateparamlist>
      <param>
        <type>typename FuncSignature</type>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classdispatcher_1_1internal_1_1CallExpecter_1ab322e950b923ef3bf47e7558ebdda7aa" prot="private" static="no" mutable="no">
        <type>std::vector&lt; Expectation&lt; FuncSignature &gt; &gt;</type>
        <definition>std::vector&lt;Expectation&lt;FuncSignature&gt; &gt; dispatcher::internal::CallExpecter&lt; FuncSignature &gt;::remaining_expectation_</definition>
        <argsstring></argsstring>
        <name>remaining_expectation_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dispatcher_test.hpp" line="256" column="17" bodyfile="include/dispatcher_test.hpp" bodystart="256" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdispatcher_1_1internal_1_1CallExpecter_1a16d32223a15b3ff75ac7c90fdd735b09" prot="private" static="no" mutable="no">
        <type>boost::optional&lt; typename FunctionDispatcher&lt; FuncSignature &gt;::func_type &gt;</type>
        <definition>boost::optional&lt;typename FunctionDispatcher&lt;FuncSignature&gt;::func_type&gt; dispatcher::internal::CallExpecter&lt; FuncSignature &gt;::default_behavior</definition>
        <argsstring></argsstring>
        <name>default_behavior</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dispatcher_test.hpp" line="257" column="22" bodyfile="include/dispatcher_test.hpp" bodystart="257" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdispatcher_1_1internal_1_1CallExpecter_1aa901cdc23b669f783c0d3b3153c05687" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::tuple&lt; const char *, int, typename Expectation&lt; FuncSignature &gt;::matchers_tuple &gt; &gt;</type>
        <definition>std::vector&lt;std::tuple&lt;const char *, int, typename Expectation&lt;FuncSignature&gt;::matchers_tuple&gt; &gt; dispatcher::internal::CallExpecter&lt; FuncSignature &gt;::should_not_be_called_</definition>
        <argsstring></argsstring>
        <name>should_not_be_called_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dispatcher_test.hpp" line="259" column="9" bodyfile="include/dispatcher_test.hpp" bodystart="259" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classdispatcher_1_1internal_1_1CallExpecter_1a627a08abc1cca0276fb4428c7ec699c2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>dispatcher::internal::CallExpecter&lt; FuncSignature &gt;::CallExpecter</definition>
        <argsstring>()</argsstring>
        <name>CallExpecter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dispatcher_test.hpp" line="197" column="5" bodyfile="include/dispatcher_test.hpp" bodystart="197" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="classdispatcher_1_1internal_1_1CallExpecter_1aa6f650c8f4c0d852aa0b30073396d1e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dispatcher::internal::CallExpecter&lt; FuncSignature &gt;::CallExpecter</definition>
        <argsstring>(const CallExpecter &amp;)=delete</argsstring>
        <name>CallExpecter</name>
        <param>
          <type>const CallExpecter &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dispatcher_test.hpp" line="201" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classdispatcher_1_1internal_1_1CallExpecter_1accf39a0c544ba8f7fbd8ceb324e634da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CallExpecter &amp;</type>
        <definition>CallExpecter&amp; dispatcher::internal::CallExpecter&lt; FuncSignature &gt;::operator=</definition>
        <argsstring>(const CallExpecter &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const CallExpecter &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dispatcher_test.hpp" line="202" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classdispatcher_1_1internal_1_1CallExpecter_1ae7b68254427f5d87ded001268ffe96b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dispatcher::internal::CallExpecter&lt; FuncSignature &gt;::CallExpecter</definition>
        <argsstring>(CallExpecter &amp;&amp;)=default</argsstring>
        <name>CallExpecter</name>
        <param>
          <type>CallExpecter &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dispatcher_test.hpp" line="203" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classdispatcher_1_1internal_1_1CallExpecter_1a1a18cccb768697f10832d1b4e81c0fef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CallExpecter &amp;</type>
        <definition>CallExpecter&amp; dispatcher::internal::CallExpecter&lt; FuncSignature &gt;::operator=</definition>
        <argsstring>(CallExpecter &amp;&amp;)=default</argsstring>
        <name>operator=</name>
        <param>
          <type>CallExpecter &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dispatcher_test.hpp" line="204" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classdispatcher_1_1internal_1_1CallExpecter_1ab755df64f04fdfaa2d9ac6277b2167e0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void dispatcher::internal::CallExpecter&lt; FuncSignature &gt;::attach</definition>
        <argsstring>()</argsstring>
        <name>attach</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dispatcher_test.hpp" line="207" column="10" bodyfile="include/dispatcher_test.hpp" bodystart="207" bodyend="230"/>
      </memberdef>
      <memberdef kind="function" id="classdispatcher_1_1internal_1_1CallExpecter_1a6acf2989df4b271f04037a82a774828a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void dispatcher::internal::CallExpecter&lt; FuncSignature &gt;::add_expectation</definition>
        <argsstring>(Expectation&lt; FuncSignature &gt; expectation)</argsstring>
        <name>add_expectation</name>
        <param>
          <type>Expectation&lt; FuncSignature &gt;</type>
          <declname>expectation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dispatcher_test.hpp" line="232" column="10" bodyfile="include/dispatcher_test.hpp" bodystart="232" bodyend="235"/>
      </memberdef>
      <memberdef kind="function" id="classdispatcher_1_1internal_1_1CallExpecter_1a68f7c442c6973a5d7574384446046258" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Callback</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void dispatcher::internal::CallExpecter&lt; FuncSignature &gt;::set_default_behavior</definition>
        <argsstring>(Callback &amp;&amp;callback)</argsstring>
        <name>set_default_behavior</name>
        <param>
          <type>Callback &amp;&amp;</type>
          <declname>callback</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dispatcher_test.hpp" line="238" column="10" bodyfile="include/dispatcher_test.hpp" bodystart="238" bodyend="241"/>
      </memberdef>
      <memberdef kind="function" id="classdispatcher_1_1internal_1_1CallExpecter_1a719bd5ce485cc771a32a0d56d4372f42" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Matchers</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void dispatcher::internal::CallExpecter&lt; FuncSignature &gt;::add_should_not_call_matchers</definition>
        <argsstring>(const char *file, int line, Matchers &amp;&amp;matchers)</argsstring>
        <name>add_should_not_call_matchers</name>
        <param>
          <type>const char *</type>
          <declname>file</declname>
        </param>
        <param>
          <type>int</type>
          <declname>line</declname>
        </param>
        <param>
          <type>Matchers &amp;&amp;</type>
          <declname>matchers</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dispatcher_test.hpp" line="244" column="10" bodyfile="include/dispatcher_test.hpp" bodystart="244" bodyend="247"/>
      </memberdef>
      <memberdef kind="function" id="classdispatcher_1_1internal_1_1CallExpecter_1a3b21afb2460259062231bbbe86a10280" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void dispatcher::internal::CallExpecter&lt; FuncSignature &gt;::clean_expectations</definition>
        <argsstring>()</argsstring>
        <name>clean_expectations</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dispatcher_test.hpp" line="249" column="10" bodyfile="include/dispatcher_test.hpp" bodystart="249" bodyend="253"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="include/dispatcher_test.hpp" line="195" column="1" bodyfile="include/dispatcher_test.hpp" bodystart="195" bodyend="273"/>
    <listofallmembers>
      <member refid="classdispatcher_1_1internal_1_1CallExpecter_1a6acf2989df4b271f04037a82a774828a" prot="public" virt="non-virtual"><scope>dispatcher::internal::CallExpecter</scope><name>add_expectation</name></member>
      <member refid="classdispatcher_1_1internal_1_1CallExpecter_1a719bd5ce485cc771a32a0d56d4372f42" prot="public" virt="non-virtual"><scope>dispatcher::internal::CallExpecter</scope><name>add_should_not_call_matchers</name></member>
      <member refid="classdispatcher_1_1internal_1_1CallExpecter_1ab755df64f04fdfaa2d9ac6277b2167e0" prot="public" virt="non-virtual"><scope>dispatcher::internal::CallExpecter</scope><name>attach</name></member>
      <member refid="classdispatcher_1_1internal_1_1CallExpecter_1a627a08abc1cca0276fb4428c7ec699c2" prot="public" virt="non-virtual"><scope>dispatcher::internal::CallExpecter</scope><name>CallExpecter</name></member>
      <member refid="classdispatcher_1_1internal_1_1CallExpecter_1aa6f650c8f4c0d852aa0b30073396d1e3" prot="public" virt="non-virtual"><scope>dispatcher::internal::CallExpecter</scope><name>CallExpecter</name></member>
      <member refid="classdispatcher_1_1internal_1_1CallExpecter_1ae7b68254427f5d87ded001268ffe96b6" prot="public" virt="non-virtual"><scope>dispatcher::internal::CallExpecter</scope><name>CallExpecter</name></member>
      <member refid="classdispatcher_1_1internal_1_1CallExpecter_1a3b21afb2460259062231bbbe86a10280" prot="public" virt="non-virtual"><scope>dispatcher::internal::CallExpecter</scope><name>clean_expectations</name></member>
      <member refid="classdispatcher_1_1internal_1_1CallExpecter_1a16d32223a15b3ff75ac7c90fdd735b09" prot="private" virt="non-virtual"><scope>dispatcher::internal::CallExpecter</scope><name>default_behavior</name></member>
      <member refid="classdispatcher_1_1internal_1_1CallExpecter_1accf39a0c544ba8f7fbd8ceb324e634da" prot="public" virt="non-virtual"><scope>dispatcher::internal::CallExpecter</scope><name>operator=</name></member>
      <member refid="classdispatcher_1_1internal_1_1CallExpecter_1a1a18cccb768697f10832d1b4e81c0fef" prot="public" virt="non-virtual"><scope>dispatcher::internal::CallExpecter</scope><name>operator=</name></member>
      <member refid="classdispatcher_1_1internal_1_1CallExpecter_1ab322e950b923ef3bf47e7558ebdda7aa" prot="private" virt="non-virtual"><scope>dispatcher::internal::CallExpecter</scope><name>remaining_expectation_</name></member>
      <member refid="classdispatcher_1_1internal_1_1CallExpecter_1a68f7c442c6973a5d7574384446046258" prot="public" virt="non-virtual"><scope>dispatcher::internal::CallExpecter</scope><name>set_default_behavior</name></member>
      <member refid="classdispatcher_1_1internal_1_1CallExpecter_1aa901cdc23b669f783c0d3b3153c05687" prot="private" virt="non-virtual"><scope>dispatcher::internal::CallExpecter</scope><name>should_not_be_called_</name></member>
      <member refid="classdispatcher_1_1internal_1_1ExpecterBase_1a646fee37689b250de70d76555c25ce10" prot="public" virt="virtual"><scope>dispatcher::internal::CallExpecter</scope><name>~ExpecterBase</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
