<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classdispatcher_1_1internal_1_1MemoryPool" kind="class" language="C++" prot="public">
    <compoundname>dispatcher::internal::MemoryPool</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classdispatcher_1_1internal_1_1MemoryPool_1a7f5d614183c9fb0b68f88b3e756071be" prot="private" static="no" mutable="no">
        <type>std::size_t</type>
        <definition>std::size_t dispatcher::internal::MemoryPool::size_</definition>
        <argsstring></argsstring>
        <name>size_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dispatcher.hpp" line="186" column="17" bodyfile="include/dispatcher.hpp" bodystart="186" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdispatcher_1_1internal_1_1MemoryPool_1a097cb290ca92dca08c32d57d5f8584ad" prot="private" static="no" mutable="no">
        <type>std::queue&lt; void * &gt;</type>
        <definition>std::queue&lt;void *&gt; dispatcher::internal::MemoryPool::allocated_blocks_</definition>
        <argsstring></argsstring>
        <name>allocated_blocks_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dispatcher.hpp" line="187" column="16" bodyfile="include/dispatcher.hpp" bodystart="187" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdispatcher_1_1internal_1_1MemoryPool_1a39289719144d51fdf972e6da92544e5b" prot="private" static="no" mutable="no">
        <type>std::mutex</type>
        <definition>std::mutex dispatcher::internal::MemoryPool::m_</definition>
        <argsstring></argsstring>
        <name>m_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dispatcher.hpp" line="188" column="16" bodyfile="include/dispatcher.hpp" bodystart="188" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classdispatcher_1_1internal_1_1MemoryPool_1a33d1250085a2b4e1303d51fd7aa648d8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>dispatcher::internal::MemoryPool::MemoryPool</definition>
        <argsstring>(std::size_t size)</argsstring>
        <name>MemoryPool</name>
        <param>
          <type>std::size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dispatcher.hpp" line="144" column="5" bodyfile="include/dispatcher.hpp" bodystart="144" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="classdispatcher_1_1internal_1_1MemoryPool_1a34090fe7b081f6fe2802e8e8e6310473" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>dispatcher::internal::MemoryPool::~MemoryPool</definition>
        <argsstring>()</argsstring>
        <name>~MemoryPool</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dispatcher.hpp" line="147" column="5" bodyfile="include/dispatcher.hpp" bodystart="147" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="classdispatcher_1_1internal_1_1MemoryPool_1a70a45d2208268ef6efdb4e93ad2e0a05" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dispatcher::internal::MemoryPool::MemoryPool</definition>
        <argsstring>(const MemoryPool &amp;)=delete</argsstring>
        <name>MemoryPool</name>
        <param>
          <type>const MemoryPool &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dispatcher.hpp" line="155" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classdispatcher_1_1internal_1_1MemoryPool_1ad2bd60f9198493e47a11df97d1988a0f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dispatcher::internal::MemoryPool::MemoryPool</definition>
        <argsstring>(MemoryPool &amp;&amp;)=delete</argsstring>
        <name>MemoryPool</name>
        <param>
          <type>MemoryPool &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dispatcher.hpp" line="156" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classdispatcher_1_1internal_1_1MemoryPool_1a53cf13eab30582aa8814bd78f4cc3b0b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>MemoryPool &amp;</type>
        <definition>MemoryPool&amp; dispatcher::internal::MemoryPool::operator=</definition>
        <argsstring>(const MemoryPool &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const MemoryPool &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dispatcher.hpp" line="157" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classdispatcher_1_1internal_1_1MemoryPool_1af46eb750d7392f351cfafb491749f622" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>MemoryPool &amp;</type>
        <definition>MemoryPool&amp; dispatcher::internal::MemoryPool::operator=</definition>
        <argsstring>(MemoryPool &amp;&amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>MemoryPool &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dispatcher.hpp" line="158" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classdispatcher_1_1internal_1_1MemoryPool_1a3a452c80d069112db89ef35dbad103e5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void *</type>
        <definition>void* dispatcher::internal::MemoryPool::allocate</definition>
        <argsstring>()</argsstring>
        <name>allocate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dispatcher.hpp" line="160" column="10" bodyfile="include/dispatcher.hpp" bodystart="160" bodyend="173"/>
      </memberdef>
      <memberdef kind="function" id="classdispatcher_1_1internal_1_1MemoryPool_1ace0e4c434741099947650ab0957ebe6c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void dispatcher::internal::MemoryPool::free</definition>
        <argsstring>(void *memory_block)</argsstring>
        <name>free</name>
        <param>
          <type>void *</type>
          <declname>memory_block</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dispatcher.hpp" line="174" column="10" bodyfile="include/dispatcher.hpp" bodystart="174" bodyend="178"/>
      </memberdef>
      <memberdef kind="function" id="classdispatcher_1_1internal_1_1MemoryPool_1aba8b96e976e4a1fe42a17a6e02bd91ed" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t dispatcher::internal::MemoryPool::get_size</definition>
        <argsstring>()</argsstring>
        <name>get_size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dispatcher.hpp" line="180" column="17" bodyfile="include/dispatcher.hpp" bodystart="180" bodyend="183"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="include/dispatcher.hpp" line="142" column="1" bodyfile="include/dispatcher.hpp" bodystart="142" bodyend="189"/>
    <listofallmembers>
      <member refid="classdispatcher_1_1internal_1_1MemoryPool_1a3a452c80d069112db89ef35dbad103e5" prot="public" virt="non-virtual"><scope>dispatcher::internal::MemoryPool</scope><name>allocate</name></member>
      <member refid="classdispatcher_1_1internal_1_1MemoryPool_1a097cb290ca92dca08c32d57d5f8584ad" prot="private" virt="non-virtual"><scope>dispatcher::internal::MemoryPool</scope><name>allocated_blocks_</name></member>
      <member refid="classdispatcher_1_1internal_1_1MemoryPool_1ace0e4c434741099947650ab0957ebe6c" prot="public" virt="non-virtual"><scope>dispatcher::internal::MemoryPool</scope><name>free</name></member>
      <member refid="classdispatcher_1_1internal_1_1MemoryPool_1aba8b96e976e4a1fe42a17a6e02bd91ed" prot="public" virt="non-virtual"><scope>dispatcher::internal::MemoryPool</scope><name>get_size</name></member>
      <member refid="classdispatcher_1_1internal_1_1MemoryPool_1a39289719144d51fdf972e6da92544e5b" prot="private" virt="non-virtual"><scope>dispatcher::internal::MemoryPool</scope><name>m_</name></member>
      <member refid="classdispatcher_1_1internal_1_1MemoryPool_1a33d1250085a2b4e1303d51fd7aa648d8" prot="public" virt="non-virtual"><scope>dispatcher::internal::MemoryPool</scope><name>MemoryPool</name></member>
      <member refid="classdispatcher_1_1internal_1_1MemoryPool_1a70a45d2208268ef6efdb4e93ad2e0a05" prot="public" virt="non-virtual"><scope>dispatcher::internal::MemoryPool</scope><name>MemoryPool</name></member>
      <member refid="classdispatcher_1_1internal_1_1MemoryPool_1ad2bd60f9198493e47a11df97d1988a0f" prot="public" virt="non-virtual"><scope>dispatcher::internal::MemoryPool</scope><name>MemoryPool</name></member>
      <member refid="classdispatcher_1_1internal_1_1MemoryPool_1a53cf13eab30582aa8814bd78f4cc3b0b" prot="public" virt="non-virtual"><scope>dispatcher::internal::MemoryPool</scope><name>operator=</name></member>
      <member refid="classdispatcher_1_1internal_1_1MemoryPool_1af46eb750d7392f351cfafb491749f622" prot="public" virt="non-virtual"><scope>dispatcher::internal::MemoryPool</scope><name>operator=</name></member>
      <member refid="classdispatcher_1_1internal_1_1MemoryPool_1a7f5d614183c9fb0b68f88b3e756071be" prot="private" virt="non-virtual"><scope>dispatcher::internal::MemoryPool</scope><name>size_</name></member>
      <member refid="classdispatcher_1_1internal_1_1MemoryPool_1a34090fe7b081f6fe2802e8e8e6310473" prot="public" virt="non-virtual"><scope>dispatcher::internal::MemoryPool</scope><name>~MemoryPool</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
